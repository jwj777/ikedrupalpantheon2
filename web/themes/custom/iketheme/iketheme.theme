<?php

/**
 * @file
 * Functions to support theming.
 */

use Drupal\Core\Url;  // Ensure this line is within the PHP tags

/**
 * Implements hook_preprocess_image_widget().
 */
function iketheme_preprocess_image_widget(array &$variables) {
  $data = &$variables['data'];

  // This prevents image widget templates from rendering preview container HTML
  // to users that do not have permission to access these previews.
  // @todo revisit in https://drupal.org/node/953034
  // @todo revisit in https://drupal.org/node/3114318
  if (isset($data['preview']['#access']) && $data['preview']['#access'] === FALSE) {
    unset($data['preview']);
  }
}


function iketheme_preprocess_page(&$variables) {
    // Define an array of field names and their corresponding template variable names.
    $fields = [
        'field_hero_background_image' => 'hero_background_image_url',
        'field_hero_background' => 'hero_background_url',
    ];

    if (isset($variables['node'])) {
        foreach ($fields as $fieldName => $variableName) {
            if ($variables['node']->hasField($fieldName) && !$variables['node']->get($fieldName)->isEmpty()) {
                $fileUri = $variables['node']->get($fieldName)->entity->getFileUri();
                $variables[$variableName] = \Drupal::service('file_url_generator')->generateAbsoluteString($fileUri);
            } else {
                // Provide a default if no image is set
                $variables[$variableName] = Url::fromUri('base://path/to/default/image.jpg')->toString();
            }
        }
    }
}

function iketheme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Retrieve the current node from the route.
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    // Add a template suggestion for the content type.
    $suggestions[] = 'page__' . $node->bundle();
  }
}
