// Generated by CoffeeScript 1.8.0

/*
PAGE ABOUT VIEW
Args:{
model : urlModel with page data (assigned before initialize by parent class)
}
Triggers:
"ready" : function(view) when it's ready to be displayed
 */

(function() {
  define(["jquery", "underscore", "backbone", "js/memorial/models/faqModel", "js/memorial/models/organizationModel", "js/memorial/views/listView", "text!partials/memorial/_about.html", "text!partials/memorial/_faqitem.tpl.html", "text!partials/memorial/_organization.tpl.html"], function($, _, Backbone, FaqModelClass, OrgModelClass, ListViewClass, html, faqTemplate, orgTemplate) {
    return Backbone.View.extend({
      className: "page-about-view",
      initialize: function() {
        var collection, self;
        this.$el.html(html);
        collection = new Backbone.Collection();
        collection.model = FaqModelClass;
        collection.url = this.model.get("api")["faq"];
        this.faqList = new ListViewClass({
          collection: collection,
          template: faqTemplate,
          el: this.$(".faq-list")[0]
        });
        collection = new Backbone.Collection();
        collection.model = OrgModelClass;
        collection.url = this.model.get("api")["legacy"];
        this.orgList = new ListViewClass({
          collection: collection,
          template: orgTemplate,
          el: this.$(".organization-list")[0]
        });
        self = this;
        this.faqList.collection.fetch({
          complete: function() {
            self.faqListReady = true;
            return self.onComplete();
          }
        });
        return this.orgList.collection.fetch({
          complete: function() {
            self.orgListReady = true;
            return self.onComplete();
          }
        });
      },
      onComplete: function() {
        if (this.orgListReady && this.faqListReady) {
          return this.trigger("ready", this);
        }
      },
      destroy: function() {
        this.faqList.destroy();
        this.orgList.destroy();
        return this.remove();
      }
    });
  });

}).call(this);
