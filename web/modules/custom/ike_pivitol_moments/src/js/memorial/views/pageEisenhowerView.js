// Generated by CoffeeScript 1.8.0
(function() {
  define(["jquery", "underscore", "backbone", "js/memorial/models/ikeSectionModel", "js/memorial/views/ikeMomentSectionView", "js/memorial/views/galleryView", "text!partials/memorial/_eisenhower.html"], function($, _, Backbone, SectionModel, SectionView, GalleryView, html) {
    return Backbone.View.extend({
      className: "page-eisenhower-view",
      initialize: function(args) {
        this.sectionModel = this.sectionModel || SectionModel;
        this.sectionView = this.sectionView || SectionView;
        this.model.on("change:params", this._onParamsChange, this);
        this.$el.html(html);
        this.collection = new Backbone.Collection();
        this.collection.model = this.sectionModel;
        this.collection.url = this.model.get("api");
        this.index = (this.model.get("params") ? this.model.get("params")["p"] : 0);
        this.gallery = new GalleryView({
          view: this.sectionView,
          collection: this.collection,
          loop: true,
          interval: 0
        });
        this.$(".experience-content").html(this.gallery.el);
        if (this.collection.length < 2) {
          this.gallery.$leftControl.hide();
          this.gallery.$rightControl.hide();
        }
        this.gallery.on("change:index", this._onGalleryIndexChange, this);
        this.collection.on("reset", this._onCollectionReset, this);
        return this.collection.fetch();
      },
      _onCollectionReset: function(collection) {
        this.collection.off("reset", this._onCollectionReset, this);
        switch (this.index) {
          case "first":
            this.index = 0;
            break;
          case "last":
            this.index = this.collection.length - 1;
            break;
          default:
            this.index = parseInt(this.index);
        }
        this.gallery.moveTo(this.index, 0);
        return this.trigger("ready", this);
      },
      _onParamsChange: function(model) {
        var index;
        index = (this.model.get("params") ? parseInt(this.model.get("params")["p"]) : 0);
        return this.gallery.moveTo(index, 0);
      },
      _onGalleryIndexChange: function(index, rawIndex) {
        return this.model.set("params", {
          p: index
        });
      },
      destroy: function() {
        this.collection.off("reset", this._onCollectionReset, this);
        this.model.off("change:params", this._onParamsChange, this);
        this.gallery.off("change:index", this._onGalleryIndexChange, this);
        this.gallery.destroy();
        return this.remove();
      }
    });
  });

}).call(this);
