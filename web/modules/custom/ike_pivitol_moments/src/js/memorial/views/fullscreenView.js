// Generated by CoffeeScript 1.8.0
(function() {
  define(["jquery", "underscore", "backbone", "js/memorial/views/imageView", "js/memorial/views/sliderView", "js/memorial/views/sharingBoxView", "text!partials/memorial/_fullscreen.html", "text!partials/memorial/_thumbnail.tpl.html"], function($, _, Backbone, ImageView, SliderView, SharingBoxView, html, template) {
    return Backbone.View.extend({
      className: "fullscreen-view",
      initialize: function(args) {
        var self;
        this.collection = args.collection;
        this.collection.on("reset", this._onCollectionReset, this);
        this.index = args.index;
        this.$el.html(html);
        this.template = _.template(template);
        this.isOpen = false;
        this.$overlay = this.$el.children(".fullscreen-overlay").hide();
        this._sharingBoxView = new SharingBoxView();
        this.$overlay.children(".sharing-box").html(this._sharingBoxView.el);
        this.$thumbnailgrid = this.$overlay.children(".thumbnail-grid");
        self = this;
        this.$openButton = this.$el.children(".fullscreen-button").click(function() {
          return self.open();
        });
        this.$closeButton = this.$overlay.children(".close-button").click(function() {
          return self.close();
        });
        return this._updateSharingBox(this.index);
      },
      moveTo: function(index, duration) {
        if (this._slider && index !== this._slider.index) {
          this._slider.moveTo(index, duration);
          index = this._slider.index;
        }
        if (this._thumbnails && index !== this.index) {
          this.$thumbnailgrid.children(".thumbnail").removeClass("active");
          this._thumbnails[index].addClass("active");
        }
        this.index = index;
        return this.trigger("change:index", index);
      },
      open: function() {
        if (this.isOpen) {
          return;
        }
        this.isOpen = true;
        if (!this._slider) {
          this._createSlider();
        }
        if (!this._thumbnails) {
          this._createThumbnails();
        }
        this._slider.play();
        this.$overlay.fadeIn(500);
        this.trigger("change:isOpen", this.isOpen);
        return $("body").addClass('no-overflow');
      },
      close: function() {
        if (!this.isOpen) {
          return;
        }
        this.isOpen = false;
        this._slider.stop();
        this.$overlay.fadeOut(500);
        this.trigger("change:isOpen", this.isOpen);
        return $("body").removeClass('no-overflow');
      },
      _onCollectionReset: function() {
        return this._updateSharingBox(this.index);
      },
      _updateSharingBox: function(index) {
        var contents, model;
        if (!this._sharingBoxView) {
          return;
        }
        if (!index) {
          index = 0;
        }
        contents = void 0;
        model = void 0;
        if (index < this.collection.length) {
          model = this.collection.at(index);
          contents = model.toJSON();
          contents["url"] = window.location;
          contents["image"] = model.getImage("small");
        }
        return this._sharingBoxView.setContents(contents);
      },
      _onIndexChange: function() {
        if (this.index === this._slider.index) {
          return;
        }
        this.moveTo(this._slider.index);
        return this._updateSharingBox(this._slider.index);
      },
      _createThumbnails: function() {
        var self;
        if (!this._slider) {
          return;
        }
        this.$thumbnailgrid.empty();
        _.each(this._thumbnails, function($t) {
          return $t.unbind("click");
        });
        this._thumbnails = [];
        self = this;
        this.collection.each(function(model, index) {
          var $t;
          $t = $(self.template(model.toJSON())).click(function() {
            return self.moveTo(index);
          });
          self._thumbnails.push($t);
          self.$thumbnailgrid.append($t);
          if (index === self.index) {
            return $t.addClass("active");
          }
        });
        return this.collection.on("all", this._createThumbnails, this);
      },
      _createSlider: function() {
        var self;
        this._slider = new SliderView({
          collection: this.collection,
          viewClass: ImageView,
          createAmount: 10,
          className: "slider",
          transitionType: "fade",
          interval: 0,
          index: this.index
        });
        this.$overlay.children(".sections").html(this._slider.el);
        self = this;
        this.$leftControl = this.$overlay.children(".sections-nav.left").click(function() {
          return self.moveTo(self._slider.index - 1);
        });
        this.$rightControl = this.$overlay.children(".sections-nav.right").click(function() {
          return self.moveTo(self._slider.index + 1);
        });
        return this._slider.on("change:index", this._onIndexChange, this);
      },
      destroy: function() {
        this._sharingBoxView.destroy();
        this.$openButton.unbind("click");
        this.$closeButton.unbind("click");
        if (this._thumbnails) {
          _.each(this._thumbnails, function($t) {
            return $t.unbind("click");
          });
        }
        if (this._slider) {
          this._slider.destroy();
          this._slider.off("change:index", this._onIndexChange, this);
          this.$leftControl.unbind("click");
          return this.$rightControl.unbind("click");
        }
      }
    });
  });

}).call(this);
