// Generated by CoffeeScript 1.8.0

/*
MISSION VIEW PAGE
Args:{
model : urlModel with page data (assigned before initialize by parent class)
}
Triggers:
"ready" : function(view) when it's ready to be displayed
 */

(function() {
  define(["jquery", "underscore", "backbone", "js/memorial/models/missionModel", "js/memorial/models/pdfLinkModel", "js/memorial/views/linkListView", "text!partials/memorial/_mission.html", "text!partials/memorial/_mission.tpl.html"], function($, _, Backbone, MissionModelClass, LinkModelClass, LinkListViewClass, html, template) {
    return Backbone.View.extend({
      className: "page-mission-view",
      initialize: function() {
        var budgetCollection, minutesCollection, self;
        this.$el.html(html);
        this.$missionContainer = this.$el.children(".mission");
        this.template = _.template(template);
        self = this;
        this.missionModel = new MissionModelClass();
        this.missionModel.url = this.model.get("api")["mission"];
        this.missionModel.on("all", this.render, this);
        this.missionModel.fetch({
          complete: function() {
            self.missionReady = true;
            return self.onComplete();
          }
        });
        minutesCollection = new Backbone.Collection();
        minutesCollection.model = LinkModelClass;
        minutesCollection.url = this.model.get("api")["minutes"];
        minutesCollection.fetch({
          complete: function() {
            self.minutesReady = true;
            return self.onComplete();
          }
        });
        this.minutesView = new LinkListViewClass({
          collection: minutesCollection
        });
        this.$(".minutes").append(this.minutesView.el);
        budgetCollection = new Backbone.Collection();
        budgetCollection.model = LinkModelClass;
        budgetCollection.url = this.model.get("api")["budget"];
        budgetCollection.fetch({
          complete: function() {
            self.budgetReady = true;
            return self.onComplete();
          }
        });
        this.budgetView = new LinkListViewClass({
          collection: budgetCollection
        });
        return this.$(".budget").append(this.budgetView.el);
      },
      onComplete: function() {
        if (this.budgetReady && this.minutesReady && this.missionReady) {
          return this.trigger("ready", this);
        }
      },
      render: function() {
        this.$missionContainer.html(this.template(this.missionModel.toJSON()));
        return this;
      },
      destroy: function() {
        this.missionModel.off("all", this.render, this);
        if (this.minutesView.destroy !== undefined) {
          this.minutesView.destroy();
        }
        if (this.budgetView.destroy !== undefined) {
          return this.budgetView.destroy();
        }
      }
    });
  });

}).call(this);
