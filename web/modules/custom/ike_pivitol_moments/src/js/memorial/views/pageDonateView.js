// Generated by CoffeeScript 1.8.0

/*
JOIN US PAGE
Args:{
model : urlModel with page data (assigned before initialize by parent class)
}
Triggers:
"ready" : function(view) when it's ready to be displayed
 */

(function() {
  define(["jquery", "underscore", "backbone", "text!partials/memorial/_donation.html", "text!partials/memorial/_paybycheck.html"], function($, _, Backbone, html, check) {
    return Backbone.View.extend({
      className: "page-donation-view",
      initialize: function() {
        var api;
        api = this.model.get("api");
        this.levelsAPI = api.levels + "?cachebust=" + Math.round(new Date().getTime() / 1000);
        this.donorsAPI = api.donors + "?cachebust=" + Math.round(new Date().getTime() / 1000);
        return $.getJSON(this.levelsAPI, (function(_this) {
          return function(data) {
            _this.levelsData = data;
            return $.getJSON(_this.donorsAPI, function(data) {
              var v, _i, _len;
              for (_i = 0, _len = data.length; _i < _len; _i++) {
                v = data[_i];
                v.donation_level = v.donation_level[0];
              }
              _this.donorsData = _.chain(data).groupBy('donation_level').map(function(v, k) {
                return {
                  donation_level: k,
                  donors: v
                };
              }).value();
              return _this.onComplete();
            });
          };
        })(this));
      },
      onComplete: function() {
        var $allLevels, $columnA, $columnB, $columnC, $columnOverlayA, $columnOverlayB, $columnOverlayC, $donateList, $donor, $donorSection, $html, $overflow, $overflowView, $toAppend, dLevel, donor, formatMoney, i, level, remainder, showViewAll, totalDonors, unescaped, _fn, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2;
        formatMoney = function(num_, plus_) {
          var num;
          if (plus_ == null) {
            plus_ = false;
          }
          num = num_.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          if (plus_) {
            num += "+";
          }
          return num;
        };
        this.$el.html(html);
        $("#payByCheck").click((function(_this) {
          return function() {
            var $check;
            $check = $(check);
            _this.$el.append($check);
            return $check.find(".close-button").click(function() {
              return $check.fadeOut(function() {
                return $check.remove();
              });
            });
          };
        })(this));
        $donateList = this.$el.find(".donate-list");
        _ref = this.levelsData;
        _fn = function($overflow, $overflowView) {
          return $overflow.click(function() {
            $overflow.find(".amount").toggle();
            return $overflowView.slideToggle();
          });
        };
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          level = _ref[i];
          $html = "<div class=\"donor-section\">\n	<div class=\"donor-section-header\">											\n		<div class=\"donor-section-center\">\n                                                <div class='donor-section-icon'>\"\n	          <img src='/static/img/memorial/icon_" + (level.title.replace(/\s/g, "").toLowerCase()) + ".png'>\" \n            </div>\n			<div class=\"backline\"><div class=\"donor-section-txt\">" + level.title + "</div></div>\n			<h4 class=\"donor-section-txt sub\">";
          if (level.min_amount != null) {
            $html += "                          $" + (formatMoney(level.min_amount, i === 0));
          }
          if (level.max_amount != null) {
            $html += "                           &ndash; $" + (formatMoney(level.max_amount));
          }
          $html += "                    </h4>\n	</div>\n</div>";
          $donorSection = "<div class='donor-section-list'>";
          $columnA = "<div class='donor-column'>";
          $columnB = "<div class='donor-column'>";
          $columnC = "<div class='donor-column'>";
          $columnOverlayA = "<div class='donor-column'>";
          $columnOverlayB = "<div class='donor-column'>";
          $columnOverlayC = "<div class='donor-column'>";
          $overflow = "<div class='donor-overflow'>";
          totalDonors = 0;
          showViewAll = false;
          if (level.node_id) {
            _ref1 = this.donorsData;
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              dLevel = _ref1[_j];
              if (dLevel.donation_level === level.node_id) {
                i = 0;
                _ref2 = dLevel.donors;
                for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
                  donor = _ref2[_k];
                  unescaped = donor.donor_name.replace(/&lt;br&gt;/g, "<br>");
                  $donor = "<div class='donor'>";
                  if (donor && donor.donor_url) {
                    $donor += "  <a href='" + donor.donor_url + "' target='_blank'>";
                  }
                  if (donor && donor.donor_image) {
                    $donor += "    <img src='" + donor.donor_image + "'><br>";
                  }
                  $donor += "    <span class='donor-name-txt'>" + unescaped + "</span>";
                  if (donor && donor.donor_url) {
                    $donor += "  </a>";
                  }
                  $donor += "</div>";
                  remainder = i % 3;
                  switch (remainder) {
                    case 0:
                      if (showViewAll) {
                        $columnOverlayA += $donor;
                      } else {
                        $columnA += $donor;
                      }
                      break;
                    case 1:
                      if (showViewAll) {
                        $columnOverlayB += $donor;
                      } else {
                        $columnB += $donor;
                      }
                      break;
                    case 2:
                      if (showViewAll) {
                        $columnOverlayC += $donor;
                      } else {
                        $columnC += $donor;
                      }
                  }
                  if (++i === 12 && dLevel.donors.length > 12) {
                    showViewAll = true;
                  }
                  totalDonors++;
                }
              }
            }
          }
          $columnA += "</div>";
          $columnB += "</div>";
          $columnC += "</div>";
          $columnOverlayA += "</div>";
          $columnOverlayB += "</div>";
          $columnOverlayC += "</div>";
          $donorSection += $columnA;
          if (totalDonors > 1) {
            $donorSection += $columnB;
          }
          if (totalDonors > 2) {
            $donorSection += $columnC;
          }
          if (showViewAll) {
            $overflow += $columnOverlayA;
            $overflow += $columnOverlayB;
            $overflow += $columnOverlayC;
            $donorSection += $overflow;
          }
          $donorSection += "          </div>";
          if (showViewAll) {
            $donorSection += "     <div class='donor-button-txt'>view <span class='amount'>all</span><span class='amount' style='display:none'>fewer</span></div>";
          }
          $donorSection += "</div>";
          if (totalDonors > 0) {
            $html += $donorSection;
          }
          $toAppend = $($html);
          $overflow = $toAppend.find(".donor-button-txt");
          $overflowView = $toAppend.find(".donor-overflow");
          _fn($overflow, $overflowView);
          $donateList.append($toAppend);
        }
        $allLevels = this.$el.find(".donor-sections");
        for (_l = 0, _len3 = $allLevels.length; _l < _len3; _l++) {
          level = $allLevels[_l];
          $(level).click(function() {
            $allLevels.find(".benefit-list").stop().slideUp();
            return $(this).find(".benefit-list").stop().slideToggle();
          });
        }
        return this.trigger("ready", this);
      },
      destroy: function() {
        return this.remove();
      }
    });
  });

}).call(this);
