// Generated by CoffeeScript 1.8.0
(function() {
  define(["jquery", "underscore", "backbone", "video", "text!partials/memorial/_videosection.tpl.html"], function($, _, Backbone, _V_, template) {
    return Backbone.View.extend({
      className: "video-section-view",
      params: {
        controls: true,
        autoplay: false,
        preload: "auto",
        loop: false
      },
      initialize: function(args) {
        var $videoEl, self;
        this.params = _.extend(this.params, {
          poster: this.model.get("video_poster_url"),
          width: this.model.get("width"),
          height: this.model.get("height")
        }, args.params);
        this.$el.html(_.template(template, this.model.toJSON()));
        $videoEl = this.$("video");
        self = this;
        _V_($videoEl[0], this.params, function() {
          return self._onPlayerReady(this);
        });
        return this.fullscreenButton = $(".fullscreen-button").unbind("click").click(function(event) {
          return self.fullscreen(true);
        });
      },
      _isPlaying: false,
      _onPlayerReady: function(video) {
        var self;
        this.$videoEl = $(video.el).css({
          width: "920px",
          height: "518px"
        });
        this.video = video;
        self = this;
        this.video.addEvent("play", function() {
          return self._onPlayerPlay();
        });
        this.video.addEvent("pause", function() {
          return self._onPlayerPause();
        });
        this.video.addEvent("ended", function() {
          return self._onPlayerFinish();
        });
        this.video.addEvent("fullscreenchange", function() {
          return self._onFullScreen();
        });
        if (this._isFullscreen) {
          return fullscreen(true);
        }
      },
      _onPlayerPlay: function(event) {
        return this.trigger("play", this);
      },
      _onPlayerPause: function(event) {
        return this.trigger("pause", this);
      },
      _onPlayerFinish: function(event) {
        $(this.video.posterImage.el).show();
        $(this.video.loadingSpinner.el).hide();
        return this.trigger("finish", this);
      },
      _onFullScreen: function(event) {
        if (this.video.isFullScreen) {
          return this.$videoEl.addClass("fullscreen");
        } else {
          return this.$videoEl.removeClass("fullscreen");
        }
      },
      fullscreen: function(enable) {
        this._isFullscreen = enable;
        if (!this.video) {
          return;
        }
        if (enable) {
          return this.video.requestFullScreen();
        } else {
          return this.video.cancelFullScreen();
        }
      },
      play: function() {
        this._isPlaying = true;
        if (!this.video) {
          return;
        }
        return this.video.play();
      },
      pause: function() {
        this._isPlaying = false;
        if (!this.video) {
          return;
        }
        return this.video.pause();
      }
    });
  });

}).call(this);
