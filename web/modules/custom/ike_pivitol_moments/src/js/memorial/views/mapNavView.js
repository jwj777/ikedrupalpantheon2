// Generated by CoffeeScript 1.8.0

/*
MAP NAV VIEW
Args:{
collection: collection with model type SectionModel
index: index to start with
}
Triggers:
"change:index"
 */

(function() {
  define(["jquery", "underscore", "backbone", "text!partials/memorial/_mapnav.html"], function($, _, Backbone, html) {
    return Backbone.View.extend({
      className: "map-nav-view",
      events: {
        "click .map-button": "open",
        "click .close-button": "close"
      },
      initialize: function(args) {
        this.collection = args.collection;
        this.index = args.index || 0;
        this.$el.html(html);
        this.$mapImg = this.$(".map-image");
        this.$mapHolder = this.$(".map-holder").hide();
        this.$selectorHolder = this.$(".map-selectors");
        if (this.collection.length) {
          this._onCollectionChange(this.collection);
        } else {
          this.collection.on("reset", this._onCollectionChange, this);
        }
        return this.$el.hide();
      },
      setIndex: function(index, silent) {
        if (index === this.index) {
          return;
        }
        this.index = index || 0;
        this.render();
        return this.trigger("change:index", index);
      },
      render: function() {
        var $selectors, model;
        if (!this.collection.length || this.index < 0 || this.index >= this.collection.length) {
          return;
        }
        model = this.collection.at(this.index);
        $selectors = this.$selectorHolder.children();
        $selectors.removeClass("active");
        if (this.index < $selectors.length) {
          $selectors.eq(this.index).addClass("active");
        }
        return this;
      },
      open: function() {
        return this.$mapHolder.stop().fadeIn();
      },
      close: function() {
        return this.$mapHolder.stop().fadeOut();
      },
      _onCollectionChange: function(collection) {
        var self, show, url;
        this.$selectorHolder.empty();
        self = this;
        url = "";
        show = false;
        collection.each(function(model, index) {
          var $a, active;
          if (!model.get("map_y") || !model.get("map_x")) {
            return;
          }
          show = true;
          active = (index === self.index ? " active" : "");
          $a = $("<a></a>").attr({
            "class": "selector" + active
          }).text("" + (index + 1)).css({
            position: "absolute",
            top: model.get("map_y") * 100 + "%",
            left: model.get("map_x") * 100 + "%"
          }).click(function() {
            return self.setIndex(index);
          });
          self.$selectorHolder.append($a);
          return url = model.get("map_url") || url;
        });
        if (url) {
          self.$mapImg.attr("src", url);
        }
        if (show) {
          this.render();
          return this.$el.show();
        } else {
          return this.$el.hide();
        }
      },
      destroy: function() {
        this.collection.off("reset", this._onCollectionChange, this);
        return this.remove();
      }
    });
  });

}).call(this);
